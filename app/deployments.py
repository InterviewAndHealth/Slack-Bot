from app.models import ClusterDeployment, Deployment, Package, Repository, Workflows

deployments: list[Deployment] = [
    Deployment(
        id="frontend",
        title="Frontend",
        emoji="üñ•Ô∏è",
        package=Package(image="frontend"),
        repository=Repository(repo="Frontend"),
        deployments=ClusterDeployment(servive="frontend"),
    ),
    Deployment(
        id="user-service",
        title="User Service",
        emoji="üë§",
        package=Package(image="user-service"),
        repository=Repository(repo="User-Service"),
        deployments=ClusterDeployment(servive="user-service"),
    ),
    Deployment(
        id="interview-service",
        title="Interview Service",
        emoji="üé§",
        package=Package(image="interview-service"),
        repository=Repository(repo="Interview-Service"),
        deployments=ClusterDeployment(servive="interview-service"),
    ),
    Deployment(
        id="conversation-service",
        title="Conversation Service",
        emoji="üí¨",
        package=Package(image="conversation-service"),
        repository=Repository(repo="Conversation-Service"),
        deployments=ClusterDeployment(servive="conversation-service"),
    ),
    Deployment(
        id="payment-service",
        title="Payment Service",
        emoji="üí≥",
        package=Package(image="payment-service"),
        repository=Repository(repo="Payment-Service"),
        deployments=ClusterDeployment(servive="payment-service"),
    ),
    Deployment(
        id="job-service",
        title="Job Service",
        emoji="üë∑",
        package=Package(image="job-service"),
        repository=Repository(repo="Job-Service"),
        deployments=ClusterDeployment(servive="job-service"),
    ),
    Deployment(
        id="scheduler-service",
        title="Scheduler Service",
        emoji="üóìÔ∏è",
        package=Package(image="scheduler-service"),
        repository=Repository(repo="Scheduler-Service"),
        deployments=ClusterDeployment(servive="scheduler-service"),
    ),
    Deployment(
        id="rabbitmq-keepalive",
        title="Cron Job - RabbitMQ Keep Alive",
        emoji="‚è∞üêá",
        package=Package(image="cronjob/rabbitmq-keepalive"),
        repository=Repository(repo="CronJobs"),
        deployments=ClusterDeployment(servive="rabbitmq-keepalive"),
        workflows=Workflows(
            development="rabbitmq-keepalive-build.yml",
            production="rabbitmq-keepalive-deploy.yml",
        ),
    ),
    Deployment(
        id="process-pending-feedbacks",
        title="Cron Job - Process Pending Feedbacks",
        emoji="‚è∞üìù",
        package=Package(image="cronjob/process-pending-feedbacks"),
        repository=Repository(repo="CronJobs"),
        deployments=ClusterDeployment(servive="process-pending-feedbacks"),
        workflows=Workflows(
            development="process-pending-feedbacks-build.yml",
            production="process-pending-feedbacks-deploy.yml",
        ),
    ),
]
